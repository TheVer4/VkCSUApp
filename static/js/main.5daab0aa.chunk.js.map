{"version":3,"sources":["panels/Splash.js","panels/ModalSelectors.js","panels/Home.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["Splash","id","setModal","go","title","size","onClick","data-to","directionList","coursesList","groupsList","ModalGroupSelector","values","modal","updateModal","modalBack","closeModal","useState","directionValue","setDirectionValue","courseValue","setCourseValue","groupValue","setGroupValue","getVariable","name","value","forEach","dict","saveVariable","connect","send","activeModal","header","left","onClose","top","placeholder","map","key","Home","fetchedUser","before","photo_200","src","description","city","first_name","last_name","level","osName","platform","Persik","props","IOS","className","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","modalHistory","updateModalHistory","updateValues","useEffect","a","user","val","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","console","log","fetchData","e","currentTarget","dataset","to","setOneModal","currModalHistory","indexOf","splice","push","ModalSelectors","length","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5daab0aa.chunk.js","sourcesContent":["import React from 'react';\n//import PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n//import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n//import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\n//import ModalGroupSelector from './panels/ModalGroupSelector';\n\nconst Splash = ({id, go, setModal}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Расписание ИИТ ЧелГУ</PanelHeader>\n\t\t<Group title=\"Open ModalGroupSelector\" >\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" onClick={setModal} data-to=\"groupSelectorPage\">\n\t\t\t\t\tВыбери группу\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nexport default Splash;","import React, { useState } from 'react';\nimport connect from '@vkontakte/vk-connect';\n//import PropTypes from 'prop-types';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {ModalRoot, ModalPage, ModalPageHeader, FormLayout, SelectMimicry, FormLayoutGroup, Radio, PanelHeaderBack} from '@vkontakte/vkui';\n\n\tconst directionList = ['Программная инженерия', 'Бизнес-информатика'];\n\tconst coursesList = ['1', '2', '3', '4', 'Магистратура-1', 'Магистратура-2'];\n\tconst groupsList = ['ПрИ-101', 'ПрИ-102', 'ПрИ-201', 'БИ-101'];\n\n\tconst ModalGroupSelector = ({id, go, values, modal, updateModal, modalBack, closeModal}) => {\n\t\tconst [directionValue, setDirectionValue] = useState('');\n\t\tconst [courseValue, setCourseValue] = useState('');\n\t\tconst [groupValue, setGroupValue] = useState('');\n\t\tif(values) {\n\t\t\tif(getVariable('direction') != directionValue) setDirectionValue(getVariable('direction'));\n\t\t\tif(getVariable('course') != courseValue) setCourseValue(getVariable('course'));\n\t\t\tif(getVariable('group') != groupValue) setGroupValue(getVariable('group'));\n\t\t}\n\n\t\tfunction storeData() {\n\t\t\tsaveVariable('direction', directionValue);\n\t\t\tsaveVariable('course', courseValue);\n\t\t\tsaveVariable('group', groupValue);\n\t\t\tcloseModal();\n\t\t\tgo(\"persik\");\n\t\t}\n\n\t\tfunction getVariable(name) {\n\t\t\tlet value = '';\n\t\t\tvalues.forEach((dict) => {\n\t\t\t\tif(dict['key'] === name)\n\t\t\t\t\tvalue = dict['value'];\n\t\t\t\t});\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction saveVariable(name, value) {\n\t\t\tconnect.send(\n\t\t\t\t\"VKWebAppStorageSet\",\n\t\t\t\t{\n\t\t\t\t\t'key': name,\n\t\t\t\t\t'value': value\n\t\t\t\t});\n\t\t}\n\n\t\treturn(\n\t\t\t<ModalRoot id={id} activeModal={modal}>\n\t\t\t<ModalPage\n\t\t\t\tid=\"groupSelectorPage\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => modalBack()}/>}>\n\t\t\t\t\t\tДавайте всё настроим :)\n\t\t\t\t\t</ModalPageHeader>\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => closeModal()\n\t\t\t\t}>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<SelectMimicry top=\"Направление\" placeholder=\"Выбрать направление\" onClick={() => updateModal('direction')}>{directionValue}</SelectMimicry>\n\t\t\t\t\t<SelectMimicry top=\"Курс\" placeholder=\"Выбрать курс\" onClick={() => updateModal('course')}>{courseValue}</SelectMimicry>\n\t\t\t\t\t<SelectMimicry top=\"Группа\" placeholder=\"Выбрать группу\" onClick={() => updateModal('group')}>{groupValue}</SelectMimicry>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tsize=\"xl\" \n\t\t\t\t\t\tonClick={() => storeData() } \n\t\t\t\t\t\t>Погнали</Button>\n\t\t\t\t</FormLayout>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"direction\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => modalBack()}/>}>\n\t\t\t\t\t\tВыберите направление\n\t\t\t\t\t</ModalPageHeader> //direction\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => modalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tdirectionList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> {setDirectionValue(title); modalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"course\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => modalBack()}/>}>\n\t\t\t\t\t\tВыберите курс\n\t\t\t\t\t</ModalPageHeader> //course\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => modalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tcoursesList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> { setCourseValue(title); modalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"group\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => modalBack()}/>}>\n\t\t\t\t\t\tВыберите группу\n\t\t\t\t\t</ModalPageHeader> //group\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => modalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupsList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> { setGroupValue(title); modalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\t\t</ModalRoot>\n\t);\n}\nexport default ModalGroupSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Splash from './panels/Splash';\nimport ModalSelectors from './panels/ModalSelectors';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\n const [activePanel, setActivePanel] = useState('splash');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n const [modal, updateModal] = useState(null);\n const [modalHistory, updateModalHistory] = useState([]);\n const [values, updateValues] = useState(null);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t} else if (type === \"VKWebAppStorageGetResult\") {\n\t\t\t\tconsole.log(\"[Connect] Updating values OK\");\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tconst val = await connect.send(\"VKWebAppStorageGet\", {\"keys\": ['direction', 'course', 'group']});\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t\tupdateValues(val['keys']);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tif(typeof e != 'string')\n\t\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tsetActivePanel(e);\n\t};\n\n\tconst setOneModal = (value) => {\n\t\tvalue = value || null;\n\t\tlet currModalHistory = modalHistory ? [...modalHistory] : [];\n\t\tif(value === null) {\n\t\t\tcurrModalHistory = [];\n\t\t} else if(currModalHistory.indexOf(value) !== -1) {\n\t\t\tcurrModalHistory = currModalHistory.splice(\n\t\t\t\t0,\n\t\t\t\tcurrModalHistory.indexOf(value) + 1);\n\t\t} else {\n\t\t\tcurrModalHistory.push(value);\n\t\t}\n\t\tupdateModal(value);\n\t\tupdateModalHistory(currModalHistory);\n\t}\n\n\tconst modalBack = () => \n\t\tsetOneModal(modalHistory[modalHistory.length - 2]);\n\n\tconst closeModal = () =>\n\t\tsetOneModal(null);\n\t\n\n\tconst setModalFrom = (e) => {\n\t\tconst val = e.currentTarget.dataset.to;\n\t\tsetOneModal(val);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout} modal={<ModalSelectors values={values} go={go} modal={modal} updateModal={setOneModal} modalBack={modalBack} closeModal={closeModal}/>}>\n\t\t\t<Splash id='splash' go={go}\tsetModal={setModalFrom}/>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}