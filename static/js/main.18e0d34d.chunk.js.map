{"version":3,"sources":["panels/Splash.js","panels/cookies.js","panels/ModalSelectors.js","panels/Home.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["Splash","id","setModal","go","title","size","onClick","data-to","Cookies","name","value","options","path","expires","Date","now","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","matches","match","RegExp","replace","decodeURIComponent","undefined","directionList","coursesList","groupsList","cookies","alreadyChanged","ModalGroupSelector","open","useState","getCookie","directionValue","setDirectionValue","courseValue","setCourseValue","groupValue","setGroupValue","modalHistory","updateModalHistory","modal","updateModal","setOneModal","currModalHistory","indexOf","splice","push","setModalBack","length","activeModal","header","left","onClose","top","placeholder","setCookie","map","key","Home","fetchedUser","before","photo_200","src","description","city","first_name","last_name","level","osName","platform","Persik","props","IOS","className","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","send","user","subscribe","detail","type","data","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ModalSelectors","val","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18e0d34d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\n//import ModalGroupSelector from './panels/ModalGroupSelector';\n\nconst Splash = ({id, go, setModal}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Расписание ИИТ ЧелГУ</PanelHeader>\n\t\t<Group title=\"Open ModalGroupSelector\" >\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" onClick={setModal} data-to=\"groupSelectorPage\">\n\t\t\t\t\tВыберите группу\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nexport default Splash;","export default class Cookies {\n\t\n\tsetCookie(name, value, options = {}) {\n\t  options = {\n\t    path: '/',\n\t    expires: new Date(Date.now() + 86400e3 * 365),\n\t    // при необходимости добавьте другие значения по умолчанию\n\t    ...options\n\t  };\n\n\t  if (options.expires instanceof Date) {\n\t    options.expires = options.expires.toUTCString();\n\t  }\n\n\t  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n\t  for (let optionKey in options) {\n\t    updatedCookie += \"; \" + optionKey;\n\t    let optionValue = options[optionKey];\n\t    if (optionValue !== true) {\n\t      updatedCookie += \"=\" + optionValue;\n\t    }\n\t  }\n\n\t  document.cookie = updatedCookie;\n\t}\n\n\tgetCookie(name) {\n\t\tlet matches = document.cookie.match(\n\t\t\tnew RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n\t\treturn matches ? decodeURIComponent(matches[1]) : undefined;\n\t}\n\n}\n","import React, { useState } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Cookies from './cookies.js';\nimport {ModalRoot, ModalPage, ModalPageHeader, FormLayout, SelectMimicry, FormLayoutGroup, Radio, PanelHeaderBack} from '@vkontakte/vkui';\n\n\tconst directionList = ['Программная инженерия', 'Бизнес-информатика'];\n\tconst coursesList = ['1', '2', '3', '4', 'Магистратура-1', 'Магистратура-2'];\n\tconst groupsList = ['ПрИ-101', 'ПрИ-102', 'ПрИ-201', 'БИ-101'];\n\t//const modalHistory = new Array();\n\tvar cookies = new Cookies();\n\tvar alreadyChanged = false;\n\n\n\tconst ModalGroupSelector = ({id, go, open}) => {\n\t\tconst [directionValue, setDirectionValue] = useState(cookies.getCookie('direction'));\n\t\tconst [courseValue, setCourseValue] = useState(cookies.getCookie('course'));\n\t\tconst [groupValue, setGroupValue] = useState(cookies.getCookie('group'));\n\t\tconst [modalHistory, updateModalHistory] = useState([]);\n\t\tconst [modal, updateModal] = useState(null);\n\n\n\t\tconst setOneModal = (value) => {\n\t\t\tvalue = value || null;\n\t\t\tlet currModalHistory = modalHistory ? [...modalHistory] : [];\n\t\t\tif(value === null) {\n\t\t\t\tcurrModalHistory = [];\n\t\t\t} else if(currModalHistory.indexOf(value) !== -1) {\n\t\t\t\tcurrModalHistory = currModalHistory.splice(\n\t\t\t\t\t0,\n\t\t\t\t\tcurrModalHistory.indexOf(value) + 1);\n\t\t\t} else {\n\t\t\t\tcurrModalHistory.push(value);\n\t\t\t}\n\t\t\tupdateModal(value);\n\t\t\tupdateModalHistory(currModalHistory);\n\t\t}\n\n\t\tconst setModalBack = () => \n\t\t\tsetOneModal(modalHistory[modalHistory.length - 2]);\n\t\t\n\n\t\tconst closeModal = () => {\n\t\t\tsetOneModal(null);\n\t\t\talreadyChanged = false;\n\t\t}\n\t\t\n\t\tif(!alreadyChanged && open != null && modal == null) {\n\t\t\tsetOneModal(open);\n\t\t\talreadyChanged = true;\n\t\t} //Init. Doesn't work without it\n\n\t\tfunction storeData() {\n\t\t\tcookies.setCookie('direction', directionValue);\n\t\t\tcookies.setCookie('course', courseValue);\n\t\t\tcookies.setCookie('group', groupValue);\n\t\t\tsetModalBack();\n\t\t\tgo(\"persik\");\n\t\t}\n\n\t\treturn(\n\t\t\t<ModalRoot id={id} activeModal={modal}>\n\t\t\t<ModalPage\n\t\t\t\tid=\"groupSelectorPage\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => setModalBack()}/>}>\n\t\t\t\t\t\tДавайте всё настроим :)\n\t\t\t\t\t</ModalPageHeader>\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => setModalBack()\n\t\t\t\t}>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<SelectMimicry top=\"Направление\" placeholder=\"Выбрать направление\" onClick={() => setOneModal('direction')}>{directionValue}</SelectMimicry>\n\t\t\t\t\t<SelectMimicry top=\"Курс\" placeholder=\"Выбрать курс\" onClick={() => setOneModal('course')}>{courseValue}</SelectMimicry>\n\t\t\t\t\t<SelectMimicry top=\"Группа\" placeholder=\"Выбрать группу\" onClick={() => setOneModal('group')}>{groupValue}</SelectMimicry>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tsize=\"xl\" \n\t\t\t\t\t\tonClick={() => storeData() } \n\t\t\t\t\t\t>Погнали</Button>\n\t\t\t\t</FormLayout>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"direction\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => setModalBack()}/>}>\n\t\t\t\t\t\tВыберите направление\n\t\t\t\t\t</ModalPageHeader> //direction\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => setModalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tdirectionList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> {setDirectionValue(title); setModalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"course\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => setModalBack()}/>}>\n\t\t\t\t\t\tВыберите курс\n\t\t\t\t\t</ModalPageHeader> //course\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => setModalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tcoursesList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> { setCourseValue(title); setModalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\n\t\t\t<ModalPage\n\t\t\t\tid=\"group\"\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => setModalBack()}/>}>\n\t\t\t\t\t\tВыберите группу\n\t\t\t\t\t</ModalPageHeader> //group\n\t\t\t\t}\n\t\t\t\tonClose={\n\t\t\t\t\t() => setModalBack()\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayoutGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupsList.map(\n\t\t\t\t\t\t\t(title, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Radio key={id} name=\"direction\" value={id} onClick={()=> { setGroupValue(title); setModalBack();}}>{title}</Radio>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</ModalPage>\n\n\t\t</ModalRoot>\n\t);\n}\nexport default ModalGroupSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Splash from './panels/Splash';\nimport ModalSelectors from './panels/ModalSelectors';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\n const [activePanel, setActivePanel] = useState('splash');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n const [modal, setOneModal] = useState(null);\n const [variables, setVariables] = useState({});\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tif(typeof e != 'string')\n\t\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tsetActivePanel(e);\n\t};\n\n\tconst setModal = (e) => {\n\t\tconst val = e.currentTarget.dataset.to;\n\t\tsetOneModal(val);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout} modal={<ModalSelectors go={go} open={modal}/>}>\n\t\t\t<Splash id='splash' go={go}\tsetModal={setModal}/>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}